'''
Problem:
Each new term in the Fibonacci sequence is generated by adding the previous two
terms. By starting with 1 and 2, the first 10 terms will be:
                1,2,3,5,8,13,21,34,55,89,..
By considering the terms in the Fibonacci sequence whose values do not exceed n
find the sum of the even-valued terms. e.g. for n=10, we have {2,8}, sum is 10.
'''

import time

def solution_2(n):
    i = 1
    j = 2
    sum = 0
    while(j<=n):
        if j%2==0:
            sum+=j
        i, j = j, i+j
    return(sum)

if __name__ == "__main__":
    start_time = time.time()
    print(solution_2(4000000))
    print("--- %s seconds ---" % (time.time() - start_time))
